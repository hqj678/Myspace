{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desk\\\\web\\u5E94\\u7528\\u8BFE\\\\react\\\\myspace\\\\src\\\\components\\\\content\\\\userdynamics.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport Base from './base';\nimport UserInfo from './userdynamics/userinfo';\nimport UserPost from './userdynamics/userpost';\nimport UserWrite from './userdynamics/userwrite';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Userdynamics = () => {\n  _s();\n\n  const [done, setdone] = useState(false);\n  const user_id = useParams().userid;\n  const [postCount, setpostCount] = useState(3);\n  const [posts, setposts] = useState([]);\n\n  const getposts = user_id => {\n    if (!done) {\n      $.ajax({\n        url: \"https://app165.acapp.acwing.com.cn/myspace/post/\",\n        type: \"GET\",\n        data: {\n          user_id: props.user_id\n        },\n        headers: {\n          'Authorization': 'Bearer ' + access\n        },\n\n        success(resp) {\n          setuser({\n            username: resp.username,\n            id: resp.id,\n            photo: resp.photo,\n            is_followed: resp.is_followed,\n            followCount: resp.followerCount\n          });\n          setdone(true);\n        }\n\n      });\n    }\n  };\n\n  const post_a_post = content => {\n    setpostCount(postCount + 1);\n    let post = {\n      id: postCount,\n      userid: 1,\n      content: content\n    };\n    setposts([...posts, post]);\n  };\n\n  const delete_a_post = post_id => {\n    const newposts = posts.filter(post => post.id !== post_id);\n    setpostCount(postCount - 1);\n    setposts(newposts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n          user_id: user_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserWrite, {\n          posts: posts,\n          postCount: postCount,\n          post_a_post: post_a_post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-9\",\n        children: /*#__PURE__*/_jsxDEV(UserPost, {\n          posts: posts,\n          postCount: postCount,\n          delete_a_post: delete_a_post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Userdynamics, \"5HMkoFDVGWOfdYskYvTP5XPL+Kw=\", false, function () {\n  return [useParams];\n});\n\n_c = Userdynamics;\nexport default Userdynamics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userdynamics\");","map":{"version":3,"names":["React","Component","useState","Base","UserInfo","UserPost","UserWrite","useParams","Userdynamics","done","setdone","user_id","userid","postCount","setpostCount","posts","setposts","getposts","$","ajax","url","type","data","props","headers","access","success","resp","setuser","username","id","photo","is_followed","followCount","followerCount","post_a_post","content","post","delete_a_post","post_id","newposts","filter"],"sources":["D:/Desk/web应用课/react/myspace/src/components/content/userdynamics.jsx"],"sourcesContent":["import React, { Component, useState } from 'react';\r\nimport Base from './base';\r\nimport UserInfo from './userdynamics/userinfo';\r\nimport UserPost from './userdynamics/userpost';\r\nimport UserWrite from './userdynamics/userwrite';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Userdynamics = () => {\r\n\r\n  const [done, setdone] = useState(false)\r\n  const user_id = useParams().userid;\r\n  const [postCount, setpostCount] = useState(3)\r\n  const [posts, setposts] = useState([])\r\n\r\n  const getposts = (user_id) => {\r\n    if (!done) {\r\n      $.ajax({\r\n        url: \"https://app165.acapp.acwing.com.cn/myspace/post/\",\r\n        type: \"GET\",\r\n        data: {\r\n          user_id: props.user_id,\r\n        },\r\n        headers: {\r\n          'Authorization': 'Bearer ' + access\r\n        },\r\n        success(resp) {\r\n          setuser({\r\n            username: resp.username,\r\n            id: resp.id,\r\n            photo: resp.photo,\r\n            is_followed: resp.is_followed,\r\n            followCount: resp.followerCount,\r\n          })\r\n          setdone(true)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const post_a_post = (content) => {\r\n    setpostCount(postCount + 1);  \r\n    let post = {\r\n      id: postCount,\r\n      userid: 1,\r\n      content: content,\r\n    }\r\n    setposts([...posts, post]);\r\n  }\r\n\r\n  const delete_a_post = (post_id) => {\r\n\r\n    const newposts = posts.filter(post => post.id !== post_id);\r\n    setpostCount(postCount - 1)\r\n    setposts(newposts);\r\n  }\r\n\r\n  return ( \r\n    <Base>\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <UserInfo user_id={user_id} />\r\n          <UserWrite posts={posts} postCount={postCount} post_a_post={post_a_post} />\r\n        </div>\r\n        <div className=\"col-9\">\r\n          <UserPost posts={posts} postCount={postCount} delete_a_post={delete_a_post} />\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n}\r\n\r\nexport default Userdynamics"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEzB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAMS,OAAO,GAAGJ,SAAS,GAAGK,MAA5B;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMe,QAAQ,GAAIN,OAAD,IAAa;IAC5B,IAAI,CAACF,IAAL,EAAW;MACTS,CAAC,CAACC,IAAF,CAAO;QACLC,GAAG,EAAE,kDADA;QAELC,IAAI,EAAE,KAFD;QAGLC,IAAI,EAAE;UACJX,OAAO,EAAEY,KAAK,CAACZ;QADX,CAHD;QAMLa,OAAO,EAAE;UACP,iBAAiB,YAAYC;QADtB,CANJ;;QASLC,OAAO,CAACC,IAAD,EAAO;UACZC,OAAO,CAAC;YACNC,QAAQ,EAAEF,IAAI,CAACE,QADT;YAENC,EAAE,EAAEH,IAAI,CAACG,EAFH;YAGNC,KAAK,EAAEJ,IAAI,CAACI,KAHN;YAINC,WAAW,EAAEL,IAAI,CAACK,WAJZ;YAKNC,WAAW,EAAEN,IAAI,CAACO;UALZ,CAAD,CAAP;UAOAxB,OAAO,CAAC,IAAD,CAAP;QACD;;MAlBI,CAAP;IAoBD;EACF,CAvBD;;EAyBA,MAAMyB,WAAW,GAAIC,OAAD,IAAa;IAC/BtB,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;IACA,IAAIwB,IAAI,GAAG;MACTP,EAAE,EAAEjB,SADK;MAETD,MAAM,EAAE,CAFC;MAGTwB,OAAO,EAAEA;IAHA,CAAX;IAKApB,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWsB,IAAX,CAAD,CAAR;EACD,CARD;;EAUA,MAAMC,aAAa,GAAIC,OAAD,IAAa;IAEjC,MAAMC,QAAQ,GAAGzB,KAAK,CAAC0B,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYS,OAAjC,CAAjB;IACAzB,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;IACAG,QAAQ,CAACwB,QAAD,CAAR;EACD,CALD;;EAOA,oBACE,QAAC,IAAD;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAK,SAAS,EAAC,OAAf;QAAA,wBACE,QAAC,QAAD;UAAU,OAAO,EAAE7B;QAAnB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,SAAD;UAAW,KAAK,EAAEI,KAAlB;UAAyB,SAAS,EAAEF,SAApC;UAA+C,WAAW,EAAEsB;QAA5D;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,OAAf;QAAA,uBACE,QAAC,QAAD;UAAU,KAAK,EAAEpB,KAAjB;UAAwB,SAAS,EAAEF,SAAnC;UAA8C,aAAa,EAAEyB;QAA7D;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA9DD;;GAAM9B,Y;UAGYD,S;;;KAHZC,Y;AAgEN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}